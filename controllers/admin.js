// Generated by CoffeeScript 1.7.1
var Authorize_Url, Comment, EventProxy, Inte, Lots, Noconcern, Topic, TopicLot, User, Warehouse, config, crypto, fs, helper, https, path, plugs, url;

fs = require('fs');

path = require('path');

crypto = require('crypto');

EventProxy = require('eventproxy');

config = require('../config').config;

https = require('https');

url = require('url');

plugs = require('./wechat-plugs');

helper = require("../lib/helper");

User = require('../model/mongo').User;

Inte = require('../model/mongo').Inte;

Lots = require('../model/mongo').Lots;

Warehouse = require('../model/mongo').Warehouse;

Topic = require('../model/mongo').Topic;

Comment = require('../model/mongo').Comment;

TopicLot = require('../model/mongo').TopicLot;

Authorize_Url = "https://open.weixin.qq.com/connect/oauth2/authorize?appid=" + config.APPID + "&redirect_uri={url}&response_type=code&scope=snsapi_userinfo&state={state}#wechat_redirect";

Noconcern = "http://mp.weixin.qq.com/s?__biz=MzA5MTUwMzMyNA==&mid=200560267&idx=1&sn=ff18fdd9bbf0efe2dde9ccc8d3028fb4#rd";

exports.lucky = function(req, res, next) {
  return Warehouse.winnerlist(function(err, resultes) {
    return res.render("admin/lucky", {
      "lucky": resultes
    });
  });
};

exports.addlot = function(req, res, next) {
  return Lots.getLots(function(err, list) {
    return res.render("admin/addlot", {
      list: list
    });
  });
};

exports.postaddlot = function(req, res, next) {
  var a, list, re, _i, _len;
  re = new helper.recode();
  console.log(req.params.lot_type);
  list = req.body.lots.split("\r\n");
  for (_i = 0, _len = list.length; _i < _len; _i++) {
    a = list[_i];
    if ((a != null) && a !== "") {
      Warehouse.newlot(req.params.lot_type, a, function(err, lot) {});
    }
  }
  return res.send(re);
};

exports.topic = function(req, res, next) {
  return Topic.getOne(function(err, t) {
    if (t != null) {
      return Comment.getByTopic(t._id, function(err, comments) {
        return res.render("admin/topic", {
          topic: t,
          comments: comments
        });
      });
    } else {
      return res.render("admin/topic", {
        topic: t
      });
    }
  });
};

exports.delcomment = function(req, res, next) {
  var id;
  id = req.params.c_id;
  Comment.delById(id, function(err, c) {});
  return res.redirect("/admin/topic");
};

exports.newtopic = function(req, res, next) {
  return res.render("admin/newtopic");
};

exports.deltopic = function(req, res, next) {
  var id;
  id = req.params.t_id;
  Topic.getById(id, function(err, t) {
    return t.remove();
  });
  return res.redirect("/admin/topic");
};

exports.topiclotpage = function(req, res, next) {
  return res.render("admin/topiclot");
};

exports.topiclot = function(req, res, next) {
  var lot, nickname, re;
  console.log(req.body);
  nickname = req.body.nickname;
  lot = req.body.lot;
  re = new helper.recode();
  if ((lot == null) || lot === "") {
    re.recode = 201;
    re.reason = "奖品不能为空";
  }
  if ((nickname == null) || nickname === "") {
    re.recode = 201;
    re.reason = "中奖人昵称不能为空";
  }
  if (re.recode !== 200) {
    return res.send(re);
  }
  return User.getUserByNickname(nickname, function(err, resultes) {
    console.log("中奖人信息:", resultes);
    if (resultes != null) {
      return TopicLot.newtopiclot(nickname, resultes._id, lot, function(err, resulte) {
        return res.send(re);
      });
    } else {
      re.recode = 201;
      re.reason = "昵称不存在,请确认名称.";
      return res.send(re);
    }
  });
};

exports.topiclotlist = function(req, res, next) {
  return TopicLot.getTopiclotList(function(err, list) {
    return res.render("admin/topiclotlist", {
      list: list
    });
  });
};

exports.deltopic = function(req, res, next) {
  var id;
  id = req.params.id;
  TopicLot.getId(id, function(err, resultes) {
    return resultes.remove();
  });
  return res.redirect("/admin/topiclotlist");
};

exports.setDefaultTopic = function(req, res, next) {
  var description, endtime, lot, name, prelot, re, startime;
  name = req.body.name;
  description = req.body.description;
  lot = req.body.lot;
  prelot = req.body.prelot;
  startime = new Date(req.body.startime);
  endtime = new Date(req.body.endtime);
  re = new helper.recode();
  if ((name == null) || name === "") {
    re.recode = 201;
    re.reason = "标题不能为空";
  }
  if ((description == null) || description === "") {
    re.recode = 201;
    re.reason = "简介不能为空";
  }
  if ((lot == null) || lot === "") {
    re.recode = 201;
    re.reason = "如果没有奖品,请填写无";
  }
  if ((prelot == null) || prelot === "") {
    re.recode = 201;
    re.reason = "如果没有中奖名单,请填写无";
  }
  if (re.recode !== 200) {
    res.send(re);
    return false;
  }
  return Topic.newTopic(name, description, lot, prelot, startime, endtime, function(err, topic) {
    console.log("创建了一个话题");
    return res.send(re);
  });
};
